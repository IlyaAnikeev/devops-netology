---
- name: Install nginx
  hosts: lighthouse-01
  tags: nginx
  handlers:
    - name: start-nginx
      become: true
      command: nginx
    - name: reload-nginx
      become: true
      command: nginx -s reload
  tasks:
    - name: NGINX | Install epel-release
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: NGINX | Install NGINX
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
      notify: start-nginx
    - name: NGINX | Create general config
      become: true
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"
      notify: reload-nginx
- name: Install lighthouse
  hosts: lighthouse-01
  tags: lighthouse
  handlers:
    - name: reload-nginx
      become: true
      command: nginx -s reload
  pre_tasks:
    - name: Lighthouse | install dependencies
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: Create lighthouse directory
      become: true
      ansible.builtin.file:
        path: "{{ lighthouse_location_dir }}"
        state: directory
        recurse: true
        mode: "0755"
        owner: nginx
        group: nginx
    - name: Lighthouse | Copy from git
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_vcs }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
        force: true
    - name: Lighthouse | Create lighthouse config
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: "0644"
      notify: reload-nginx
- name: Install Clickhouse
  hosts: clickhouse-01
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  remote_user: centos
  tasks:
    - name: Install, configure, and start Clickhouse
      tags: clickhouse

      block:
        - name: Get clickhouse distrib
          block:
            - name: Get clickhouse distrib
              ansible.builtin.get_url:
                url: https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm
                dest: ./{{ item }}-{{ clickhouse_version }}.rpm
                mode: "0644"
              with_items: "{{ clickhouse_packages }}"
          rescue:
            - name: Get clickhouse distrib
              ansible.builtin.get_url:
                url: https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm
                dest: ./clickhouse-common-static-{{ clickhouse_version }}.rpm
                mode: "0644"
              with_items: "{{ clickhouse_packages }}"

        - name: Install clickhouse packages
          become: true
          ansible.builtin.yum:
            name:
              - clickhouse-common-static-{{ clickhouse_version }}.rpm
              - clickhouse-client-{{ clickhouse_version }}.rpm
              - clickhouse-server-{{ clickhouse_version }}.rpm
          notify: Start clickhouse service

        - name: Flush handlers
          ansible.builtin.meta: flush_handlers

        - name: Pause 20
          ansible.builtin.pause:
            seconds: 20

        - name: Create database
          ansible.builtin.command: clickhouse-client -q 'create database logs;'
          register: create_db
          failed_when: create_db.rc != 0 and create_db.rc != 82
          changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector-01
  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: vector.service
        state: restarted
  remote_user: centos
  tasks:
    - name: Install Vector
      tags: vector

      block:
        - name: Create directory
          ansible.builtin.file:
            path: "{{ vector_workdir }}"
            state: directory
            mode: "0755"

        - name: Get Vector distrib
          ansible.builtin.get_url:
            url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz
            dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            mode: "0644"

        - name: Unarchive
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}"

        - name: Bin
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/bin/vector"
            dest: /usr/bin/
            mode: "0755"
            owner: root
            group: root

        - name: Check install
          ansible.builtin.command: vector --version
          register: var_vector
          failed_when: var_vector.rc != 0
          changed_when: var_vector.rc == 0

        - name: Config vector.yaml
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/config/vector.yaml"
            dest: /etc/vector/
            mode: "0644"
            owner: root
            group: root

        # - name: Template file
        #   become: true
        #   ansible.builtin.template:
        #     src: vector.yaml.j2
        #     dest: /etc/vector/vector.yaml
        #     mode: "0644"
        #     owner: root
        #     group: root

        - name: Start service
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/etc/systemd/vector.service"
            dest: /lib/systemd/system/
            mode: "0644"
            owner: root
            group: root
          notify: Start Vector service

        - name: Modify service file
          become: true
          ansible.builtin.replace:
            backup: true
            path: /lib/systemd/system/vector.service
            regexp: ^ExecStart=/usr/bin/vector$
            replace: ExecStart=/usr/bin/vector --config /etc/vector/vector.yaml
          notify: Start Vector service

        - name: Create user
          become: true
          ansible.builtin.user:
            create_home: false
            name: "{{ vector_os_user }}"

        - name: Create data_dir
          become: true
          ansible.builtin.file:
            path: /var/lib/vector
            state: directory
            mode: "0755"
            owner: "{{ vector_os_user }}"
            group: "{{ vector_os_group }}"

  # handlers:
  #   - name: Start clickhouse service
  #     become: true
  #     ansible.builtin.service:
  #       name: clickhouse-server
  #       state: restarted

  # - name: Start Vector service
  #   become: true
  #   ansible.builtin.systemd:
  #     daemon_reload: true
  #     enabled: false
  #     name: vector.service
  #     state: restarted
